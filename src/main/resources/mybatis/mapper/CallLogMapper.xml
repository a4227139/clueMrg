<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wa.cluemrg.dao.CallLogMapper">
    <resultMap id="callLogResultMap" type="com.wa.cluemrg.bo.CallLogBo">
        <id property="id" column="id"/>
        <result property="phone" column="phone"/>
        <result property="startTime" column="start_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP" typeHandler="org.apache.ibatis.type.LocalDateTimeTypeHandler"/>
        <result property="communicationLocation" column="communication_location"/>
        <result property="communicationType" column="communication_type"/>
        <result property="businessType" column="business_type"/>
        <result property="oppositePhone" column="opposite_phone"/>
        <result property="duration" column="duration"/>
        <result property="lac" column="lac"/>
        <result property="ci" column="ci"/>
        <result property="imei" column="imei"/>
        <result property="imsi" column="imsi"/>
        <result property="location" column="location"/>
        <result property="address" column="address"/>
        <result property="longitude" column="longitude"/>
        <result property="latitude" column="latitude"/>
    </resultMap>

    <select id="selectById" resultMap="callLogResultMap" >
        SELECT * FROM call_log WHERE id=#{id}
    </select>

    <!-- 在你的 MyBatis XML 配置文件中定义 -->
    <sql id="whereCondition">
        <where>
            <if test="phone != null and phone != ''">
                AND phone LIKE CONCAT('%', #{phone}, '%')
            </if>
            <if test="startTimeStart != null and startTimeEnd != null">
                AND start_time BETWEEN #{startTimeStart,javaType = java.util.Date, jdbcType = TIMESTAMP} AND #{startTimeEnd,javaType = java.util.Date, jdbcType = TIMESTAMP}
            </if>
            <if test="startTimeStart != null and startTimeEnd == null">
                AND start_time &gt;= #{startTimeStart,javaType = java.util.Date, jdbcType = TIMESTAMP}
            </if>
            <if test="startTimeStart == null and startTimeEnd != null">
                AND start_time &lt;= #{startTimeEnd,javaType = java.util.Date, jdbcType = TIMESTAMP}
            </if>
            <if test="communicationLocation != null and communicationLocation != ''">
                AND communication_location LIKE CONCAT('%', #{communicationLocation}, '%')
            </if>
            <if test="communicationType != null and communicationType != ''">
                AND communication_type LIKE CONCAT('%', #{communicationType}, '%')
            </if>
            <if test="businessType != null and businessType != ''">
                AND business_type LIKE CONCAT('%', #{businessType}, '%')
            </if>
            <if test="oppositePhone != null and oppositePhone != ''">
                AND opposite_phone LIKE CONCAT('%', #{oppositePhone}, '%')
            </if>
            <if test="duration != null and duration != ''">
                AND duration LIKE CONCAT('%', #{duration}, '%')
            </if>
            <if test="lac != null and lac != ''">
                AND lac LIKE CONCAT('%', #{lac}, '%')
            </if>
            <if test="ci != null and ci != ''">
                AND ci LIKE CONCAT('%', #{ci}, '%')
            </if>
            <if test="imei != null and imei != ''">
                AND imei LIKE CONCAT('%', #{imei}, '%')
            </if>
            <if test="imsi != null and imsi != ''">
                AND imsi LIKE CONCAT('%', #{imsi}, '%')
            </if>
            <if test="location != null and location != ''">
                AND location LIKE CONCAT('%', #{location}, '%')
            </if>
            <if test="longitude != null and longitude != ''">
                AND longitude LIKE CONCAT('%', #{longitude}, '%')
            </if>
            <if test="latitude != null and latitude != ''">
                AND latitude LIKE CONCAT('%', #{latitude}, '%')
            </if>
        </where>
    </sql>

    <select id="selectCount"  resultType="int" parameterType="com.wa.cluemrg.bo.CallLogBo">
        SELECT count(0) FROM call_log c
        <include refid="whereCondition" />
    </select>

    <!--<select id="selectAll"  resultMap="callLogResultMap" parameterType="com.wa.cluemrg.bo.CallLogBo">
        SELECT c.*,b.location,b.longitude,b.latitude FROM call_log c left join bs_location b on c.ci=b.ci AND c.lac=b.lac
        <include refid="whereCondition" />
        order by ${sortField} ${sortOrder}
        LIMIT #{pageSize} OFFSET #{offset};
    </select>-->

    <select id="selectAll"  resultMap="callLogResultMap" parameterType="com.wa.cluemrg.bo.CallLogBo">
        SELECT c.* FROM call_log c
        <include refid="whereCondition" />
        order by ${sortField} ${sortOrder}
        LIMIT #{pageSize} OFFSET #{offset};
    </select>

    <select id="exportAll"  resultMap="callLogResultMap" parameterType="com.wa.cluemrg.bo.CallLogBo">
        SELECT c.* FROM call_log c
            where (communication_type like '%主叫%' or communication_type like '%被叫%'
                    or communication_type like '%主短%' or communication_type like '%被短%'
                       or communication_type like '%CDMA%')
        <if test="phone != null and phone != ''">
            AND phone LIKE CONCAT('%', #{phone}, '%')
        </if>
        <if test="startTimeStart != null and startTimeEnd != null">
            AND start_time BETWEEN #{startTimeStart,javaType = java.util.Date, jdbcType = TIMESTAMP} AND #{startTimeEnd,javaType = java.util.Date, jdbcType = TIMESTAMP}
        </if>
        <if test="startTimeStart != null and startTimeEnd == null">
            AND start_time &gt;= #{startTimeStart,javaType = java.util.Date, jdbcType = TIMESTAMP}
        </if>
        <if test="startTimeStart == null and startTimeEnd != null">
            AND start_time &lt;= #{startTimeEnd,javaType = java.util.Date, jdbcType = TIMESTAMP}
        </if>
        <if test="communicationLocation != null and communicationLocation != ''">
            AND communication_location LIKE CONCAT('%', #{communicationLocation}, '%')
        </if>
        <if test="communicationType != null and communicationType != ''">
            AND communication_type LIKE CONCAT('%', #{communicationType}, '%')
        </if>
        <if test="businessType != null and businessType != ''">
            AND business_type LIKE CONCAT('%', #{businessType}, '%')
        </if>
        <if test="oppositePhone != null and oppositePhone != ''">
            AND opposite_phone LIKE CONCAT('%', #{oppositePhone}, '%')
        </if>
        <if test="duration != null and duration != ''">
            AND duration LIKE CONCAT('%', #{duration}, '%')
        </if>
        <if test="lac != null and lac != ''">
            AND lac LIKE CONCAT('%', #{lac}, '%')
        </if>
        <if test="ci != null and ci != ''">
            AND ci LIKE CONCAT('%', #{ci}, '%')
        </if>
        <if test="imei != null and imei != ''">
            AND imei LIKE CONCAT('%', #{imei}, '%')
        </if>
        <if test="imsi != null and imsi != ''">
            AND imsi LIKE CONCAT('%', #{imsi}, '%')
        </if>
        <if test="location != null and location != ''">
            AND location LIKE CONCAT('%', #{location}, '%')
        </if>
        <if test="longitude != null and longitude != ''">
            AND longitude LIKE CONCAT('%', #{longitude}, '%')
        </if>
        <if test="latitude != null and latitude != ''">
            AND latitude LIKE CONCAT('%', #{latitude}, '%')
        </if>
    </select>


    <insert id="insert" parameterType="com.wa.cluemrg.entity.CallLog">
        INSERT INTO call_log (phone, start_time, communication_location, communication_type, business_type, opposite_phone, duration, lac,ci, imei, imsi,address) VALUES
        (#{phone}, #{startTime}, #{communicationLocation}, #{communicationType}, #{businessType}, #{oppositePhone}, #{duration}, #{lac},#{ci},  #{imei}, #{imsi},#{address})
    </insert>

    <update id="update" parameterType="com.wa.cluemrg.entity.CallLog">
        UPDATE call_log SET phone=#{phone}, start_time=#{startTime}, communication_location=#{communicationLocation}, communication_type=#{communicationType}, business_type=#{businessType}, opposite_phone=#{oppositePhone}, duration=#{duration}, lac=#{lac},ci=#{ci}, imei=#{imei}, imsi=#{imsi}, address=#{address}
        WHERE id=#{id}
    </update>

    <delete id="delete" >
        DELETE FROM call_log WHERE id=#{id}
    </delete>

    <insert id="batchInsertCallLog">
        INSERT IGNORE INTO call_log (phone, start_time, communication_location, communication_type, business_type, opposite_phone, duration, lac,ci, imei, imsi,address)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.phone}, #{item.startTime}, #{item.communicationLocation}, #{item.communicationType}, #{item.businessType}, #{item.oppositePhone}, #{item.duration}, #{item.lac},#{item.ci}, #{item.imei}, #{item.imsi}, #{item.address})
        </foreach>
    </insert>

</mapper>
